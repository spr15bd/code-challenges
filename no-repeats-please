function permAlone(str) {
  let perms = []
  let length = str.length
  let charArray = str.split('')
  console.log("initial charArray: ", charArray)
  permutations(length, charArray)

  function permutations(k, charArray) {
    //console.log("k is now ", k, ", charArray to add to perms: ", charArray)
    console.log("Perms: ", perms)
    if (k === 1) {
      perms.push(charArray.join(''))
      return
    }
    permutations(k - 1, charArray);//k is 3 //k is 2
    for (let i = 0; i < k-1; i++) {
      if (k % 2 === 0) {
        let temp = charArray[k-1]//a
        charArray[k-1] = charArray[i]//a
        charArray[i] = temp//a
        //console.log("swapped ", i,"th and ", k-1,"th")
      } else {
        let temp = charArray[k-1]
        charArray[k-1] = charArray[0]
        charArray[0] = temp
      }
      permutations(k-1, charArray)
    }
  }
  
  console.log("PERMS: ", perms)

  let nonRepeatingPerms = []
  // find non-repeating permutations
  perms.filter(perm=>{
    console.log("test perm: ", perm)
    perm = perm.split('')
    let permHasRepeat = false
    perm.forEach((char, idx)=>{
      if (idx>0 && char===perm[idx-1]) {
        permHasRepeat = true
      }
    })
    if (!permHasRepeat) {
      nonRepeatingPerms.push(perm)
    }
  })
  return nonRepeatingPerms.length
}
