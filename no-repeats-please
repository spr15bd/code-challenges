function permAlone(str) {
  let perms = []
  let length = str.length
  let charArray = str.split('')
  console.log(charArray)
  permutations(length, charArray)

  function permutations(k, charArray) {
    console.log("k is now ", k)
    //perms.push(charArray.toString())
    console.log("Perms length: ", perms.length)
    if (k === 1) {
      perms.push(charArray.toString())
      return
    }
    permutations(k - 1, charArray);
    for (let i = 0; i < k-1; i++) {
      if (k % 2 === 0) {
        let temp = charArray[k-1]
        charArray[k-1] = charArray[i]
        charArray[i] = temp
      } else {
        let temp = charArray[k-1]
        charArray[k-1] = charArray[0]
        charArray[0] = temp
      }
      permutations(k-1, charArray)
    }
  }

  let nonRepeatingPerms = []
  // find non-repeating permutations
  perms.forEach(perm=>{
    console.log("test perm: ", perm)
    let permHasRepeat = false
    let charArray = perm.split('')
    charArray.forEach((char, idx)=>{
      console.log(char, charArray[idx-1])
      if (idx>0 && char===charArray[idx-1]) {
        permHasRepeat = true
        console.log("perm has repeat: ", perm)
      }
    })
    if (!permHasRepeat) {
      nonRepeatingPerms.push(perm)
    }
  })
  return nonRepeatingPerms.length
}
permAlone('aabb')
console.log("final perms: ", permAlone('aabb'))
